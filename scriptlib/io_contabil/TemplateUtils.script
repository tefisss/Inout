public class TemplateUtils {
    public static double lerValoresExtrasArquivoTxt(double valorDocumentoArray[], String line, JSONObject roteiroCRM, JSONObject futureObject) {
        //O futureObject serve para possibilitar futuras alteracoes sem que a assinatura do metodo seja modificada
        String [] indiceValores = roteiroCRM.optString("Colunas_de_Valores_Extras").split(";");
        double valorSomaArray = 0;

        for(int iv = 0; iv < indiceValores.length; iv++) {
            double denomidador = 0; 
            int indiceDenominador = -1;
            String sinal = "";
            boolean multiplica100 = false;
            boolean divide100 = false;
            
            if (indiceValores[iv].contains("*100")) multiplica100 = true;
            if (indiceValores[iv].contains("/100")) divide100 = true;
            indiceValores[iv] = indiceValores[iv].replace("*100","").replace("/100","");
            
            if (indiceValores[iv].contains("*")) sinal = "*";
            if (indiceValores[iv].contains("/")) sinal = "/";
            if (indiceValores[iv].contains("+")) sinal = "+";
            if (indiceValores[iv].contains("-")) sinal = "-";										

                                                    
            if (!sinal.equals("") && indiceValores[iv].contains(sinal)) {
                try {
                    if (!indiceValores[iv].contains("#")) {
                        String iDenominador = OicUtils.cutString(indiceValores[iv], sinal);
                        int iInicioDenominador = Integer.parseInt(OicUtils.cutString(iDenominador, "(", ","));
                        int iFinalDenominador    = Integer.parseInt(OicUtils.cutString(iDenominador, ",", ")"));

                        denomidador = Math.abs(DecimalUtil.toDecimal(OicUtils.cutString(line, iInicioDenominador, iFinalDenominador)));
                    }
                    else {
                        denomidador = DecimalUtil.toDecimal(OicUtils.cutString(indiceValores[iv], "#"));
                    }
                } catch (Exception xx) {denomidador = 0;}
                indiceValores[iv] = OicUtils.cutString(indiceValores[iv], 0, sinal);
            } 
                    
            
            try{
                int iInicioValorExtra = Integer.parseInt(OicUtils.cutString(indiceValores[iv], "(", ","));
                int iFinalValorExtra = Integer.parseInt(OicUtils.cutString(indiceValores[iv], ",", ")"));

				if (iInicioValorExtra >= line.length()){
					continue;
				}
			
				String valorExtraAux = OicUtils.cutString(line, iInicioValorExtra, iFinalValorExtra);

                //Trata a string do valor antes de converter para Double
                valorExtraAux = valorExtraAux.replaceAll("\\,", "\\.");
                valorExtraAux = valorExtraAux.replaceAll("[^0-9\\.]", "");
                while (OicUtils.quantityOf(valorExtraAux, ".") > 1) {
                    valorExtraAux = valorExtraAux.replaceFirst("\\.", "");
                }

                valorDocumentoArray[iv] = Math.abs(Double.valueOf(valorExtraAux));

                if (sinal.equals("*") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] * denomidador;
                if (sinal.equals("/") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] / denomidador;
                if (sinal.equals("+") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] + denomidador;
                if (sinal.equals("-") && denomidador > 0) valorDocumentoArray[iv] = valorDocumentoArray[iv] - denomidador;
                if (multiplica100) valorDocumentoArray[iv] = valorDocumentoArray[iv] * 100;
                if (divide100)     valorDocumentoArray[iv] = valorDocumentoArray[iv] / 100;
            }
            catch (Exception vlrd) { 
                valorDocumentoArray[iv] = 0; 
            }
            
            if(valorDocumentoArray[iv] < 0){
                valorDocumentoArray[iv] = 0;
            } 
            
            valorSomaArray += valorDocumentoArray[iv];
        }
        
        return valorSomaArray;
    }
	
	public static int verificaAba(String nomeArquivo) {
		int abaConvertida = 0;
		if (nomeArquivo.toUpperCase().startsWith("ABA_")) {
			return abaConvertida = Integer.parseInt(OicUtils.cutString(nomeArquivo.toUpperCase(), "ABA_", "_"));
		}
		return abaConvertida;
	}
	
	public static StringBuilder geraLinhaFiscalQuestor(JSONObject jDescricaoDupl) {
		return  new StringBuilder(jDescricaoDupl.optString("USAFILIAL").toUpperCase().equals("TRUE") ? 
					OicUtils.cutString(jDescricaoDupl.optString("CODEMPRESA"), "-") : jDescricaoDupl.optString("CODEMPRESA"))
				.append(";1;")
				.append(jDescricaoDupl.optString("CHAVEDUPLICATA")).append(";")
				.append(jDescricaoDupl.optString("PARCELADOC")).append(";")
				 // quando o formato da parcela deve ser igual ao duplicatas em aberto (questor) comentar linha acima e descomentar a linha abaixo
				 //txtFiscal.append(jDescricaoDupl.optString("PARCELADOCORIGINAL")); 
				.append(jDescricaoDupl.optString("DATAMOVIMENTO")).append(";")
				.append(jDescricaoDupl.optString("DATAMOVIMENTO")).append(";")
				.append(OicUtils.cutString(jDescricaoDupl.optString("DUPLICATA"), 0, "-")).append(";")
				.append(jDescricaoDupl.optString("VALORFINAL").replaceAll("\\.", ",")).append(";")
				.append(jDescricaoDupl.optString("VALORFINALJUROS").replaceAll("\\.", ",")).append(";")
				.append(jDescricaoDupl.optString("TABELACONTABIL")).append(";")
				.append(jDescricaoDupl.optString("CODIGOFORNECEDOR")).append(";")
				.append(jDescricaoDupl.optString("VALORFINALDESCONTO").replaceAll("\\.", ",")).append(";")
				.append(jDescricaoDupl.optString("VALORFINALMULTA").replaceAll("\\.", ",")).append("\r\n");
	}
	
	public static StringBuilder geraLinhaFiscalCordilheira(JSONObject jDescricaoDupl, ttMovimentoPadrao ttMov, boolean geraCabecalhoCordilheira) {
		
		return new StringBuilder(geraCabecalhoCordilheira ? 
			"DATA DE VENCIMENTO;DATA DO PAGAMENTO;CNPJ DO CLIENTE;DOCUMENTO;NOME/RAZAO;NUMERO DA PARCELA;VALOR ORIGINAL;VALOR PAGO;VALOR JUROS;VALOR DESCONTO;FORMA DE PAGAMENTO;NUMERO DA NOTA\r\n" : "")
			.append(jDescricaoDupl.optString("DATAVENCIMENTO")).append(";")
			.append(ttMov.dataMovimento).append(";")
			.append(ttMov.cpfCnpj).append(";")
			// quando o formato da parcela deve ser igual ao duplicatas em aberto (questor) comentar linha acima e descomentar a linha abaixo
			//txtFiscal[0].append(jDescricaoDupl.optString("PARCELADOCORIGINAL")); 
			.append(OicUtils.cutString(ttMov.documento, 0, "-")).append(";")
			.append(ttMov.nomeOrigem).append(";")
			.append(jDescricaoDupl.optString("PARCELADOC")).append(";")
			.append(jDescricaoDupl.optString("VALORPARCELA").replaceAll("\\.",",")).append(";")
			.append(String.format("%.2f", (ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto)).replaceAll("\\.",",")).append(";")
			.append(String.format("%.2f", ttMov.valorJuros).replaceAll("\\.",",")).append(";")
			.append(String.format("%.2f",ttMov.valorDesconto).replaceAll("\\.",",")).append(";")
			.append(jDescricaoDupl.optString("TABELACONTABIL")).append(";")
			.append(ttMov.documento).append("\r\n");
	}
	
	public static StringBuilder geraLinhaFiscalContabit(JSONObject jDescricaoDupl, ttMovimentoPadrao ttMov) {
		StringBuilder sb = new StringBuilder();
		// int cont = 0;
		// if(cont == 0){
			// sb.append("CNPJ/CPF,DATA EMISSAO,DATA PAGAMENTO,VALOR MULTA,VALOR JUROS,VALOR DESCONTO,VALOR PAGO,DOCUMENTO,CAIXA/BANCO\r\n");
		// }
		
			sb.append(jDescricaoDupl.optString("CPFCNPJ")).append(",")
			.append(jDescricaoDupl.optString("EMISSAO")).append(",")
			.append(ttMov.dataMovimento).append(",")
			.append(String.format("%.2f",ttMov.valorMulta)).append(",")
			.append(String.format("%.2f", ttMov.valorJuros)).append(",")
			.append(String.format("%.2f",ttMov.valorDesconto)).append(",")
			.append(String.format("%.2f", ttMov.valorDocumento + ttMov.valorJuros - ttMov.valorDesconto)).append(",")
			.append(jDescricaoDupl.optString("DUPLICATA")).append(",");
			if(ttMov.tipoLancamento.contains("PAG")){
				sb.append(ttMov.contaCredito).append("\r\n");
			}
			if(ttMov.tipoLancamento.contains("REC")){
				sb.append(ttMov.contaDebito).append("\r\n");
			}
			
		
		
		return sb;		
				
	}
	
	
	public JSONArray geraFiscalContabit(JSONObject roteiroCRMPrincipal, JSONObject jDadosAux, JSONArray jDescricaoDupl, DataBase dbIOCont, ttMovimentoPadrao ttMov, InoutLogger logger) throws Exception{
		
		JSONObject histobj = new JSONObject();
		
		JSONObject jDados = new JSONObject();
		jDados.put("CODEMPRESA",     jDadosAux.optString("CODEMPRESA"));
		
		if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  jDados.put("DATAVENCIMENTO", jDadosAux.optString("DATAVENCTTMOV")); 
		jDados.put("RAZAOSOCIAL",    jDadosAux.optString("RAZAOSOCIAL"));
		jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
		jDados.put("DOCUMENTO",      ttMov.documento);
		jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
		jDados.put("PARCELADOC",     ttMov.parcelaDoc);
		jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
		jDados.put("VALORJUROS",     ttMov.valorJuros);
		jDados.put("VALORMULTA",     ttMov.valorMulta);
		jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
		jDados.put("TABELACONTABIL", jDadosAux.optString("TABELACONTABIL"));
		//2308-014199 Refatoracao do validaFornecedorFiscal 
		if (!roteiroCRMPrincipal.optString("ValidaFornecedorFiscal").equals("")) {
			jDados.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optString("ValidaFornecedorFiscal"));
		}
		
		jDescricaoDupl    = buscarIODuplicataContabit(jDados, dbIOCont, logger);
		
		// logger.logInfo("BIDC " + jDescricaoDupl.toString());
		return jDescricaoDupl;
	}
	
	public JSONObject geraFiscalQuestor (JSONObject roteiroCRMPrincipal, JSONObject jDadosAux, JSONObject jDescricaoDupl, DataBase dbIOCont, ttMovimentoPadrao ttMov, InoutLogger logger) throws Exception{
		
		JSONObject histobj = new JSONObject();
		
		JSONObject jDados = new JSONObject();
		jDados.put("CODEMPRESA",     jDadosAux.optString("CODEMPRESA"));

		// usando a filial do questor em duplicatas em aberto
		if (roteiroCRMPrincipal.optString("Usa_Filial_Questor").toUpperCase().equals("TRUE"))  jDados.put("CODEMPRESA",     jDadosAux.optString("CODEMPRESA") + "-%");

		if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  jDados.put("DATAVENCIMENTO", jDadosAux.optString("DATAVENCTTMOV")); 


		jDados.put("RAZAOSOCIAL",    jDadosAux.optString("RAZAOSOCIAL"));
		jDados.put("NOMEORIGEM",     ttMov.nomeOrigem);
		jDados.put("DOCUMENTO",      ttMov.documento);
		jDados.put("DATAMOVIMENTO",  ttMov.dataMovimento);
		jDados.put("PARCELADOC",     ttMov.parcelaDoc);
		jDados.put("VALORDOCUMENTO", ttMov.valorDocumento);
		jDados.put("VALORJUROS",     ttMov.valorJuros);
		jDados.put("VALORMULTA",     ttMov.valorMulta);
		jDados.put("VALORDESCONTO",  ttMov.valorDesconto);
		jDados.put("TABELACONTABIL", jDadosAux.optString("TABELACONTABIL"));
		
		//2308-014199 Refatoracao do validaFornecedorFiscal 
		if (!roteiroCRMPrincipal.optString("ValidaFornecedorFiscal").equals("")) {
			jDados.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optString("ValidaFornecedorFiscal"));
		}


		jDescricaoDupl    = buscarIODuplicata(jDados, dbIOCont, logger);
		
		if(roteiroCRMPrincipal.optString("idContabilidade").contains("a091C00002PHPi3")){
			// logger.logInfo("SERGIo -> ANTES VALIDA DATA");
			java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("dd/MM/yyyy");
			try{
				// logger.logDebug("dataArquivo _> " + dateFormat.parse(ttMov.dataMovimento) + " | dataDuplicata -> " + dateFormat.parse(jDescricaoDupl.optString("DATAVENCIMENTO")) + " SHR");
				if(dateFormat.parse(ttMov.dataMovimento).before(dateFormat.parse(jDescricaoDupl.optString("DATAVENCIMENTO")))){
					// logger.logInfo("ENTROU BEFORE");
					jDescricaoDupl.put("TIPO","FORNECEDOR");
					jDescricaoDupl.put("DATAPOSTERIOR","TRUE");
				}
			}catch(Exception EE){
				logger.logDebug("EE DATAPOSTERIOR -> " + EE.getMessage());
			}
		}

		// #Fabrica(2019-05-20)
		// Descomentar a proxima linha para testar a razaoSocial do movimento com a jDescricaoDupl.optString("RAZAOSOCIAL") que vem das duplicatas em aberto!
		// if (jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, razaoSocial);      //IDENTIFICAMOS UMA FALHA LOGICA
		// if (jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, ttMov.nomeOrigem); //USAR ESSE
		// #Fabrica(2019-07-30)
		// Descomentar a proxima linha para testar o codigo de filial do movimento com a jDescricaoDupl.optString("SITUACAO") que vem das duplicatas em aberto! OBS: Lembrando que deve existir regra de c?digo filial no CRM
		// if(jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaBaixaPorFilial(jDescricaoDupl, ttMov.codFilial);
		// #Fabrica(2019-07-31)
		// Descomentar a proxima linha para testar data de vencimento  a jDescricaoDupl.optString("DATAVENCIMENTO") que vem das duplicatas em aberto! OBS: Complemento06, deve estar lendo a data de vencimento da planilha financeira

		// if (jDescricaoDupl.optString("TIPO").equals("FISCAL")) {
		// if (roteiroCRMPrincipal.has("validaFornecedorFiscal")) jDescricaoDupl.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optInt("validaFornecedorFiscal"));
		// jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, ttMov.nomeOrigem);
		// }
		
		//2308-014199 Retirado para refatoracao do validaFornecedorFiscal 
		// if (jDescricaoDupl.optString("TIPO").equals("FISCAL") && !roteiroCRMPrincipal.optString("validaFornecedorFiscal").equals("")) {
			// jDescricaoDupl.put("VALIDAFORNECEDORFISCAL", roteiroCRMPrincipal.optInt("validaFornecedorFiscal"));
			// jDescricaoDupl = validaRazaoSocial(jDescricaoDupl, ttMov.nomeOrigem);
		// }

		if (!roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("NAO USAR"))  {
			if(jDescricaoDupl.optString("TIPO").equals("FISCAL")) jDescricaoDupl = validaBaixaPorDataVencimento(jDescricaoDupl, jDadosAux.optString("DATAVENCTTMOV"));
		}

		return jDescricaoDupl;
	}
	
	public static boolean validaData(String data) {
		if (data.matches("(0[1-9]|[1-2][0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/20[0-9]{2}")) {
			return true;
		}
		return false;
	}
	public static String verificaSegundoConversorNovo(String arquivoCompleto) {
		if (arquivoCompleto.contains("BANCO ITAU S.A.") && arquivoCompleto.contains("MOVIMENTACAO DE TITULOS") &&
			arquivoCompleto.contains("POSICAO ATE O MOMENTO") && arquivoCompleto.contains("RESUMO DAS DEDUCOES")) {
			return "readExtratoItauPdfFrancesinha5";
		}
		
		return "";
	}
	
	public static boolean verificaConversorNovo(String arquivoCompleto) {
		//2405-040179
        if(arquivoCompleto.contains("CONTA:") && arquivoCompleto.contains("EXTRATO POR PERIODO") &&
            arquivoCompleto.contains("DATA MOV.") && arquivoCompleto.contains("NR.") && arquivoCompleto.contains("DOC.") &&
            arquivoCompleto.contains("GERAR EM ARQUIVO") && arquivoCompleto.contains("SIGLAS E ABREVIACOES")){
			return true; //CEF MODELO 07
		}
		if ((arquivoCompleto.contains("NU PAGAMENTOS S.A.") && arquivoCompleto.contains("OUVIDORIA: SE VOCE NAO FICOU SATISFEITO COM A SOLUCAO DO NOSSO TIME DE ATENDIMENTO LIGUE PARA 0800 887 0463 EM DIAS UTEIS, DAS 09H AS 18H")) ||
				(arquivoCompleto.contains("NU FINANCEIRA") && arquivoCompleto.contains("18.236.120/0001-58"))) {
			return true; //NUBANK
		}
		if ((arquivoCompleto.contains("EXTRATO DE: AGENCIA:") || arquivoCompleto.contains("EXTRATO DE: AG:")) && arquivoCompleto.contains("DEMONSTRATIVO")) {
			return true; //BRADESCO
		}
		if (arquivoCompleto.contains("BANCO SAFRA") && (arquivoCompleto.contains("EXTRATO DE MOVIMENTACAO") || (arquivoCompleto.contains("3175 8248")) || arquivoCompleto.contains("3175-8248")) && 
      		arquivoCompleto.contains("CONTA:")) {
            return true; //SAFRA
        }
		/* Chamado #2311-023023 - Condicao "(arquivoCompleto.contains("STONE INSTITUICAO DE PAGAMENTO") && arquivoCompleto.contains("S.A."))" 
           foi feita para validar "STONE INSTITUICAO DE PAGAMENTO S.A." quando ha quebra de linha no arquivo dos termos citados, deixando eles
           separados.*/
        if (arquivoCompleto.contains("STONE INSTITUICAO DE PAGAMENTO S.A.") || (arquivoCompleto.contains("STONE INSTITUICAO DE PAGAMENTO") &&
            arquivoCompleto.contains("S.A."))  && 
            arquivoCompleto.contains("CONTRAPARTE") &&
            arquivoCompleto.contains("PERIODO") && arquivoCompleto.contains("CONTA") &&
            arquivoCompleto.contains("DATA") && arquivoCompleto.contains("TIPO") &&
            arquivoCompleto.contains("DOCUMENTO") && arquivoCompleto.contains("AGENCIA")) {
            return true; //STONE
        }
		if (arquivoCompleto.contains("EXTRATO EMITIDO PELA CONTA SIMPLES - A CONTA FEITA PARA EMPREENDER")
			&& arquivoCompleto.contains("CONTA NUMERO")) {
			return true; //CONTASIMPLES MODELOS 1 E 2
		}
		if (arquivoCompleto.contains("EMITIDO EM") && arquivoCompleto.contains("CARTEIRA DE COBRANCA COM REGISTRO") &&
			arquivoCompleto.contains("PERIODO DE") && arquivoCompleto.contains("BENEFICIARIO") &&
			arquivoCompleto.contains("SITUACAO") && arquivoCompleto.contains("PAGADOR") &&
			arquivoCompleto.contains("CPF/CNPJ")) {
			return true; //FRANCESINHAGRUPOAILOS
		}
		if (arquivoCompleto.contains("CARTEIRA DE COBRANCA") && arquivoCompleto.contains("STATUS") && arquivoCompleto.contains("LIQUIDADO")){
			return true; //FRANCESINHA CRESOL
		}
		if (arquivoCompleto.contains("INVESTIMENTOS BRADESCO") && arquivoCompleto.contains("CERTIFICADO") &&
			arquivoCompleto.contains("CONTA:") && arquivoCompleto.contains("PERIODO DE:")) {
			return true; //INVESTIMENTOBRADESCO
		}
		if (arquivoCompleto.contains("ASAAS GESTAO FINANCEIRA INSTITUICAO DE PAGAMENTO")) {
			return true; //ASAAS
		}
		//#2311-022830
		//if (arquivoCompleto.contains("TOTAL APLICACOES FINANCEIRAS")  && arquivoCompleto.contains("SALDOS POR DIA BASE") &&
		//	arquivoCompleto.contains("SUJEITOS A CONFIRMACAO NO MOMENTO DA CONTRATACAO")) {
		//	return true; //BBMOBILE
		//}
		if(arquivoCompleto.contains("HISTORICO DE MOVIMENTACAO") && arquivoCompleto.contains("IOF") && arquivoCompleto.contains("BB RENDE FACIL")){
			return true; // APLI BB
		}
		if (arquivoCompleto.contains("CC:")  && arquivoCompleto.contains("INFORMACOES ATUALIZADAS ATE A DATA E O HORARIO INDICADOS ACIMA E SUJEITAS A ALTERACOES") &&
			arquivoCompleto.contains("O EXTRATO REFLETE O(S) VALOR(ES) DO SALDO EM CONTA, QUE CONTEMPLA O SALDO DA CONTA CORRENTE, SEM CONTABILIZAR") &&
			arquivoCompleto.contains("VALORES BLOQUEADOS OU LIMITE, CASO EXISTAM")) {
			return true; //VOTORANTIM
		}
		if (arquivoCompleto.contains("INSTITUICAO DE PAGAMENTO") && arquivoCompleto.contains("TITULAR DA CONTA DE PAGAMENTO") &&
			arquivoCompleto.contains("DATA") && arquivoCompleto.contains("CREDITO/DEBITO") &&
			arquivoCompleto.contains("STATUS") && arquivoCompleto.contains("IOF")) {
			return true; //VOTORANTIM2
		}
		if (arquivoCompleto.contains("EXTRATO DE CONTA VINCULADA") && arquivoCompleto.contains("O EXTRATO REFLETE") &&
			arquivoCompleto.contains("CLIENTE:")) {
			return true; //VOTORANTIM3
		}
		if (arquivoCompleto.contains("BTG PACTUAL") && arquivoCompleto.contains("RAZAO SOCIAL") &&
			arquivoCompleto.contains("CONTA CORRENTE") && arquivoCompleto.contains("CNPJ")) {
			return true; //BTG
		}
		if (arquivoCompleto.contains("01. CONTA CORRENTE E APLICACOES REMUNERA") || arquivoCompleto.contains("01. CONTA CORRENTE") && arquivoCompleto.contains("PERIODO DO EXTRATO:")) {
			return true; //BTG2
		}
		if(arquivoCompleto.contains("BANCO DO ESTADO DO RIO GRANDE DO SUL")
			&& arquivoCompleto.contains("OPERACOES PIX") && arquivoCompleto.contains("BANRISUL.COM.BR")){
			return true;//BANRISUL
		}
		if(arquivoCompleto.contains("BANCO DO ESTADO DO RIO GRANDE DO SUL")
			&& arquivoCompleto.contains("CONSULTA OPERACOES / EMITE RECIBOS") && arquivoCompleto.contains("BANRISUL")){
			return true;//BANRISUL2
		}
		if (arquivoCompleto.contains("MEUS CARTOES DE CREDITO OU OFFICE BANKING")
			&& arquivoCompleto.contains("BANRISUL S.A.") && arquivoCompleto.contains("ANUIDADE")){
			return true;//CARTAO BANRISUL
		}
		
		// gui - 2404-035964 -> NOVO PADRAO EXTRATO ITAU -> 22/04/2024
        if (arquivoCompleto.contains("CORRENTE") && arquivoCompleto.contains("ITAU") &&
                arquivoCompleto.contains("LANCAMENTO") && !arquivoCompleto.contains("POSICAO DA CONTA CORRENTE")
                && arquivoCompleto.contains("INTERNET") && arquivoCompleto.contains(".ITAU.COM.BR") && arquivoCompleto.contains("NOME: AGENCIA:")) {
            return true; //ITAU PADRAO 6
        }
		
		if (arquivoCompleto.contains("CORRENTE") && arquivoCompleto.contains("WWW.ITAU.COM.BR") &&
        arquivoCompleto.contains("LANCAMENTO") && !arquivoCompleto.contains("MENSAL") &&
        !arquivoCompleto.contains("SALDO RESUMIDO") && !arquivoCompleto.contains("LIMITE DA CONTA UTILIZADO")) {
            return true; //ITAUPADRAO3 TIPOEXTRATO4
        }
		if(arquivoCompleto.contains("DATA") && arquivoCompleto.contains("AG/ORIGEM") &&
			/* && arquivoCompleto.contains("LIMITE DA CONTA CONTRATADO")*/ //2311-022345 comentado
			(arquivoCompleto.contains("0800 728") && arquivoCompleto.contains("0728"))){
			return true; //ITAU 2
		}
		if(arquivoCompleto.contains("RELATORIO DE VENDAS") && arquivoCompleto.contains("INFINITEPAY") && arquivoCompleto.contains("0800 591 7207")){
			return true; //INFINITE-PAY-CARTAO
		}
		if(arquivoCompleto.contains("XP INVESTIMENTOS") && arquivoCompleto.contains("NOTA DE CORRETAGEM")){
            return true; //NOTAS DE CORRETAGEM
        }
		if(arquivoCompleto.contains("EMITIDO EM") && arquivoCompleto.contains("BANCO ITAU S/A") && arquivoCompleto.contains("MOVIMENTACAO")){
            return true; //ITAUFRANCESINHA01
        }
		if(arquivoCompleto.contains("CART") && arquivoCompleto.contains("PAGADOR") && arquivoCompleto.contains("TIPO") && arquivoCompleto.contains("NOSSO|") && 
			arquivoCompleto.contains("SEU|") && arquivoCompleto.contains("VENC.") && arquivoCompleto.contains("AGENCIA|") && arquivoCompleto.contains("INICIAL") && 
			arquivoCompleto.contains("VALOR") && arquivoCompleto.contains("DESCRICAO DE OPERACOES") && arquivoCompleto.contains("OPERACOES|VALOR") && 
			arquivoCompleto.contains("VALOR FINAL") && arquivoCompleto.contains("CONSULTAS, INFORMACOES E TRANSACOES, ACESSE") && arquivoCompleto.contains("ITAU.COM.BR")) {
			return true; //ITAUFRANCESINHA04
		}
        /*if(arquivoCompleto.contains("NOME DO PAGADOR") && arquivoCompleto.contains("VCTO") &&
            arquivoCompleto.contains("DATA DE MOVIMENTACAO") && arquivoCompleto.contains("AGENCIA/CONTA")){
            return true; //ITAUFRANCESINHA02
        }*/
		/* gui - 30/04/2024 -> AJUSTE PARA FORÇAR LER PELO ANTIGO CONVERSOR O PADRÃO 01 DO UNICREDPDF
		 CHAMADOO -> 2404-037187
		 AJUSTE FEITO PORQUE O NOVO CONVERSOR NAO ESTAVA TRAZENDO TODOS OS LANCAMENTOS DO PDF, JA O ANTIGO, TRAZ TUDO.
		if(((arquivoCompleto.contains("CENTRAL DE RELACIONAMENTO") && arquivoCompleto.contains("DEMAIS REGIOES:")
			&& arquivoCompleto.contains("NO EXTERIOR:") && arquivoCompleto.contains("SAC:"))
			|| arquivoCompleto.contains("OUVIDORIA") && arquivoCompleto.contains("0800 940 0602") && !arquivoCompleto.contains("COOPERATIVA DE CREDITO UNICRED"))
			&& !arquivoCompleto.contains("TELE ATENDIMENTO")){
			return true; //UNICRED1
		}*/
			// gui - 13/05/2024 -> Ajuste feito para o padrão 01 ser lido pelo novo conversor.
		if(((arquivoCompleto.contains("EXTRATO DE CONTA CORRENTE") && arquivoCompleto.contains("OUVIDORIA") &&
				arquivoCompleto.contains("0800 646 5151") && arquivoCompleto.contains("TELE ATENDIMENTO")) && !arquivoCompleto.contains("UNICRED VALE"))){
			return true; //UNICRED 01 TIPO PADRAO
		}
		
		/* gui - 28/05/2024 -> Ajuste para validar algumas diferenças de cabeçalho do padrao 01 do UNICRED;
											Chamado -> 	2405-039580                                   */
		if(arquivoCompleto.contains("UNICRED - INTERNET BANKING") && arquivoCompleto.contains("UNICRED.COM.BR") &&
			!arquivoCompleto.contains("UNICRED VALE" /*padrao 3*/) && !arquivoCompleto.contains("UNICRED EVOLUCAO LTDA" /*padrao 2*/)){
			
			return true; //UNICRED 01 TIPO INTERNET BANKING
		}
		

		if(arquivoCompleto.contains("OUVIDORIA: 0800 591 5120") &&
			arquivoCompleto.contains("COOPERATIVA DE CREDITO CREHNOR")){
			return true; //CREHNOR
		}
		if (arquivoCompleto.contains("BANCO SAFRA S/A") && arquivoCompleto.contains("0800 770 1236")
				&& arquivoCompleto.contains("ATENDIMENTO PERSONALIZADO") && arquivoCompleto.contains("CENTRAL DE SUPORTE A PESSOA JURIDICA")){
			
			return true;//FRANCESINHA SAFRA
		}
		if(arquivoCompleto.contains("SAC - 0800 647 2200") && 
			arquivoCompleto.contains("OUVIDORIA - 0800 644 1100 ") && arquivoCompleto.contains("COOPERATIVA: CIVIA")){
				return true;//AILOS CIVIA
		}
		if(arquivoCompleto.contains("BANCO INTER") && arquivoCompleto.contains("CPF/CNPJ") && arquivoCompleto.contains("0800 940 9999") && 
		   arquivoCompleto.contains("FALE COM A GENTE") && arquivoCompleto.contains("SALDO POR")){
			return true; //INTER PADRAO3
		}
		if(arquivoCompleto.contains("NEXT (237 - BANCO BRADESCO S.A.)")
			&& arquivoCompleto.contains("SE NAO FICAR SATISFEITO COM A SOLUCAO APRESENTADA, CONTATE A OUVIDORIA") && arquivoCompleto.contains("CONSULTAS, INFORMACOES E SERVICOS TRANSACIONAIS")
			&& arquivoCompleto.contains("SAC NEXT")){
					return true;// NEXT
		}
		if(arquivoCompleto.toUpperCase().contains("SALDO DO DIA") && arquivoCompleto.toUpperCase().contains("LIMITE") && 
		   arquivoCompleto.toUpperCase().contains("CONSOLIDADA EM") && arquivoCompleto.toUpperCase().contains("SALDO ANTERIOR") && 
		   arquivoCompleto.toUpperCase().contains("SALDO EM CONTA")){
			return true; //CRESOL2
		}
		if(arquivoCompleto.contains("CREDISAN COOPERATIVA DE CREDITO")
			&& arquivoCompleto.contains("EXTRATO PARA SIMPLES CONFERENCIA")){
			return true;//CREDISAN
		}
		if(arquivoCompleto.toUpperCase().contains("SISTEMA DE COOPERATIVAS DE CREDITO DO BRASIL") &&
           arquivoCompleto.toUpperCase().contains("SISBR") &&
           arquivoCompleto.toUpperCase().contains("PLATAFORMA DE SERVICOS FINANCEIROS DO SICOOB -") &&
           !arquivoCompleto.toUpperCase().contains("HORA:") &&
           !arquivoCompleto.toUpperCase().contains("PERIODO:")){
            return true; //SICOOB 3
        }
		if(arquivoCompleto.contains("EXTRATO CONTA LINKER") && arquivoCompleto.contains("WWW.LINKER.COM.BR") &&
		   arquivoCompleto.contains("TOTAL ENTRADAS")){
           return true; //LINKER
        }
		if(arquivoCompleto.contains("XP INVESTIMENTOS CCTVM S/A") && arquivoCompleto.contains("NAO HA LANCAMENTOS FUTUROS") &&
		   arquivoCompleto.contains("ATENDIMENTO AO CLIENTE") && arquivoCompleto.contains("TORRE SUL") ){
            return true; //XP 2
        }
		if (arquivoCompleto.contains("EFI S.A.") && arquivoCompleto.contains("TIPO DE REGISTRO")
            && arquivoCompleto.contains("EXTRATO FINANCEIRO") && arquivoCompleto.contains("FILTROS DO") &&
            arquivoCompleto.contains("EFI S.A. CNPJ: 09.089.356/0001-18")) {
			return true; //EFI
		}
		if(arquivoCompleto.contains("OUVIDORIA CREDISIS") && arquivoCompleto.contains("0800 648 00 20")){
			return true; //CREDISIS
		}
		/*if(arquivoCompleto.toUpperCase().contains("EXTRATO DE: AG: ") && arquivoCompleto.toUpperCase().contains("OS DADOS ACIMA TEM COMO BASE ") &&
		 arquivoCompleto.toUpperCase().contains("SALDOS INVEST FACIL / PLUS") && arquivoCompleto.contains("TOTAL DISPONIVEL") &&
		 arquivoCompleto.toUpperCase().contains("DCTO.") && arquivoCompleto.toUpperCase().contains("ENTRE")){
		 return true; //BRADESCO
		}*/
		if(arquivoCompleto.contains("RELATORIO FINANCEIRO FRANCESINHA") && arquivoCompleto.contains("ASSOCIADO:") && arquivoCompleto.contains("COOPERATIVA") && arquivoCompleto.contains("CONTA CORRENTE")
			&& arquivoCompleto.contains("BENEFICIARIO") && arquivoCompleto.contains("A TRANSACAO ACIMA FOI REALIZADA VIA SICREDI INTERNET")){
			return true;//FrancesinhaSicrediPdf tipo 001
		}
		//2312-024917 - Existem algumas quebras de linha no cliente/fornecedor, algumas dessas quebras de linhas são tratadas pelos conversores, no antigo
		//nao coloca espacamento quando junta as partes da linha, enquanto no novo nao apresenta esse problema
		if(arquivoCompleto.contains("CARTEIRA") && arquivoCompleto.contains("RELATORIO DE TITULOS") && arquivoCompleto.contains("VALOR TOTAL LIQUIDACAO")
			&& arquivoCompleto.contains("BENEFICIARIO") && arquivoCompleto.contains("COOPERATIVA") && arquivoCompleto.contains("DADOS REFERENTES AO PERIODO DE")){
			return true; //FRANCESINHA SICREDI PDF TIPO 002
		}
		if (arquivoCompleto.contains("CARTAO:") && arquivoCompleto.contains("DETALHAMENTO DA SUA FATURA") &&
			arquivoCompleto.contains("BB.COM.BR") && arquivoCompleto.contains("BANCO DO BRASIL")) {
			return true; //FATURA CARTAO CREDITO BANCO DO BRASIL
		}
		//#2311-023772 By Leal
		if(arquivoCompleto.contains("RELATORIO  -  TITULOS POR PERIODO") && arquivoCompleto.contains("TIPO CONSULTA:") &&
		   arquivoCompleto.contains("LIQUIDACAO - VIA COMPENSACAO") && arquivoCompleto.contains("CPF/CNPJ SACADO:") &&
           arquivoCompleto.contains("VLR. OUTROS") && arquivoCompleto.contains("VERSAO:")){

            return true; //FRANCESINHA SICOOB
        }
		if(arquivoCompleto.contains("PAYBROKERS IP") && arquivoCompleto.contains("CONTAPAG") && arquivoCompleto.contains("FILTROS UTILIZADOS NO RELATORIO")){
            return true; //PAYBROKERS
        }
		if(arquivoCompleto.contains("EXTRATO CONTA DE PAGAMENTO/LANCAMENTOS") &&
			arquivoCompleto.contains("ACESSOACONTA.COM.BR") &&
			arquivoCompleto.contains("PINKPAY")){
			
			return true; //PINK PAY
		}
		//2311-022659
		/*if(arquivoCompleto.contains("BANCO ITAU S.A.") && arquivoCompleto.contains("TITULOS") && arquivoCompleto.contains("MOVIMENTACAO") && 
			arquivoCompleto.contains("PAGADOR")  && arquivoCompleto.contains("OUTROS VALORES")){
			return true; //ITAUFRANCESINHA03
		}*/
		//2311-023654
		if(arquivoCompleto.contains("OUVIDORIA BB") && arquivoCompleto.contains("DEFICIENTES") && arquivoCompleto.contains("AUDITIVOS") &&
			arquivoCompleto.contains("CONSULTAR") && arquivoCompleto.contains("BOLETOS") && arquivoCompleto.contains("INSTRUCOES")){
			return true; //FRANCESINHABB
		}
		//2401-026435
		if(arquivoCompleto.contains("OMIE.CASH") && arquivoCompleto.contains("GERADO EM") && arquivoCompleto.contains("CORRENTE") && arquivoCompleto.contains("SITUACAO")){
			return true; //OMIECASH
		}
		if(arquivoCompleto.contains("EXTRATO DE CONTA CORRENTE") && arquivoCompleto.contains("TITULAR") && arquivoCompleto.contains("SALDO ANTERIOR") && arquivoCompleto.contains("SALDO ATUAL") &&
			arquivoCompleto.contains("GERADO EM") && arquivoCompleto.contains("PERIODO:") && arquivoCompleto.contains("AGENCIA:")){
			return true; //NORDESTE TIPO 2
		}
		//2402-028676
		if(arquivoCompleto.contains("PAGSEGURO") && arquivoCompleto.contains("EXTRATO FINANCEIRO") && arquivoCompleto.contains("CONTA CORRENTE") && arquivoCompleto.contains("CNPJ")){
			return true; //PAGBANK PADRAO 2
		}
		
		if(arquivoCompleto.contains("SAC DAYCOVAL") && arquivoCompleto.contains("EXTRATO DETALHADO") && arquivoCompleto.contains("DAYCONNECT") && arquivoCompleto.contains("PROVISAO DE ENCARGOS")){
			return true; //DAYCOVAL PADRAO 1 E 2 
		}
		if (arquivoCompleto.contains("XP INVESTIMENTOS") && 
			arquivoCompleto.contains("ASSESSOR:") &&
			arquivoCompleto.contains("WWW.XPI.COM.BR") &&
			arquivoCompleto.contains("CORRETORA DE CAMBIO")) {
			return true; //XP Padrao 3
		}
		
		if(	arquivoCompleto.contains("SISBB") &&
				arquivoCompleto.contains("SISTEMA DE INFORMACOES BANCO DO BRASIL") && 
				arquivoCompleto.contains("AUTOATENDIMENTO BB") && 
				arquivoCompleto.contains("DATA MOVIM.") && 
				arquivoCompleto.contains("DEP. ORIGEM") && 
				arquivoCompleto.contains("HISTORICO") ) {
					
			return true;// SISBB
					
		}
		
		if (arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER EMPRESARIAL") && arquivoCompleto.contains("0800 762 7777") &&
			arquivoCompleto.contains("NOSSO NUMERO") && arquivoCompleto.contains("AGENCIA/CONTA")){ //FRANCESINHASANTANDER 2
			return true;
		}
		
		if (arquivoCompleto.contains("INTERNET BANKING EMPRESARIAL") && arquivoCompleto.contains("AGENCIA") &&
				arquivoCompleto.contains("CONTA:") && arquivoCompleto.contains("PERIODO") && arquivoCompleto.contains("0800 726 2125") &&
				arquivoCompleto.contains("0800 723 5007") && arquivoCompleto.contains("0800 726 0322") && arquivoCompleto.contains("0800 771 0301") &&
				!arquivoCompleto.contains("VALORES DEDUZIDOS DO SALDO DISPONIVEL PARA CONTAS SEM LIMITE")  && !arquivoCompleto.contains("VER EXTRATO 365 DIAS")){ // SANTANDER PADRAO 01
			return true;
		}
		
		if(	arquivoCompleto.contains("INTERNET BANKING EMPRESARIAL") &&
				arquivoCompleto.contains("CONTA CORRENTE  >  EXTRATO  >") && 
				arquivoCompleto.contains("OPCAO DE PESQUISA:") && 
				arquivoCompleto.contains("CENTRAL DE ATENDIMENTO") && 
				arquivoCompleto.contains("CAPITAIS E REGIOES METROPOLITANAS") && 
				arquivoCompleto.contains("0800 762 7777") && 
				arquivoCompleto.contains("CENTRAL DE ATENDIMENTO SANTANDER EMPRESARIAL") ) {

			return true;// SANTANDER PADRAO 01/001

		}
		
		if (arquivoCompleto.contains("RELATORIO DE TITULOS") && arquivoCompleto.contains("BANCO/AGENCIA/CONTA") && arquivoCompleto.contains("CARTORIO") &&
			arquivoCompleto.contains("QUANTIDADE:") && arquivoCompleto.contains("RESUMO PARCIAL:") && arquivoCompleto.contains("RESUMO GERAL:")) {
			return true; //FRANCESINHA UNICREDI
		}
		
		/*if(arquivoCompleto.contains("SAC 0800 724 7220") && arquivoCompleto.contains("VALOR DO TITULO") &&
			arquivoCompleto.contains("RAZAO SOCIAL DO BENEFICIARIO")){
			return true; //COMPROVANTE SICREDI
		}*/
		
		//2405-039500
		if (arquivoCompleto.contains("CONTAMAX") && arquivoCompleto.contains("EMPRESARIAL") && arquivoCompleto.contains("EXTRATO") &&
			arquivoCompleto.contains("CORRENTE") && arquivoCompleto.contains("SANTANDER") && arquivoCompleto.contains("RENDIMENTO")) {
			return true; //Santander Contamax Empresarial
		}

		if (arquivoCompleto.contains("%$&") || arquivoCompleto.contains("!%") || arquivoCompleto.contains("$!%&") || arquivoCompleto.contains("# $%") 
			|| arquivoCompleto.contains("$*&-") || arquivoCompleto.contains("%$$&$$") || arquivoCompleto.contains("#$#%") || arquivoCompleto.contains("%&*") 
			|| arquivoCompleto.contains("*##%%") || arquivoCompleto.contains("##$%#&") || arquivoCompleto.contains("!\"#\"") || arquivoCompleto.contains("[!\"") 
			|| arquivoCompleto.contains("&<") || arquivoCompleto.contains("[!") || arquivoCompleto.contains(".%$$") || arquivoCompleto.contains("#!+")
			|| arquivoCompleto.contains("++(0+0&") || arquivoCompleto.contains("*&+&")) {
			return true;
		}
		if (arquivoCompleto.equals("[]")) {
			return true;
		}
		/* gui -> 20/05/2024
		Ajuste feito de 40 char para 150 char para tratar o chamado 2405-038508 e futuros casos parecidos.
		*/
		if (arquivoCompleto.length() < 150) {
			return true;
		}
		
		/* gui - 05/06/2024 - Chamado: 2405-040560
		Adicionando validação para solucionar a conversão errada do CONVERSOR ANTIGO do padrão 01 do UNICRED PDF
		obs: caso quando o csv do ANTIGO ja vem direto na metade dos lançamentos (nao possuindo cabeçalho inicial).
		É crucial que esta validção seja a ultima de todas.
		*/
		if(arquivoCompleto.split("\\|")[0].trim().matches("\\[\\d{2}/\\d{2}/\\d{4}")){
			return true;
		}
        
		return false;
	}
	
	public static boolean verificaConversorNovoTipoPlanilha(String tipoPlanilha) {
		if (tipoPlanilha.contains("OTTCARTAO")) {
			if (tipoPlanilha.contains("BANRICOMPRASPDF")) {
				return true;
			}
			if(tipoPlanilha.contains("AACARTAO_VERO")){
				return true;
			}
			if(tipoPlanilha.contains("CARTAO_CIELOPDF")){
				return true;
			}
		}
		return false;
	}
	
	
	public static String getIdLote(String lote) {
		String idLote = OicUtils.cutString(lote, "ott_oud", lote.indexOf("ott_oud") + 16);//202302-0025707
		
		if (lote.contains("_id")) {
			if (lote.contains("ott_oud__id")) idLote = OicUtils.cutString(lote, "ott_oud__id", "_");//2308-011361
			if (lote.contains("ott_oud_id")) idLote = OicUtils.cutString(lote, "ott_oud_id", "_");//2308-011361
		} else {
			idLote = "";
		}
		
		return idLote;
	}

	public static boolean verificaConciliacao(String arquivoCompleto) {
		if (arquivoCompleto.contains("CTA.C.PART") && arquivoCompleto.contains("LOTE") && arquivoCompleto.contains("DEBITO") &&
			arquivoCompleto.contains("CREDITO") && arquivoCompleto.contains("SALDO-EXERCICIO") && arquivoCompleto.contains("TOTAL DA CONTA:")) {
			return true;
		}
		return false;
	}
	
	public boolean validaPlanilhaPadrao(String tipoLancamento, MemoryFile memFile)throws Exception{
		if (tipoLancamento.contains("PAGAR") && memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA RECEBIMENTO") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOCUMENTO")
			&& memFile.getStringFieldRemoveEspCharsUpper(2).contains("CLIENTE /  DESCRICAO RECEITA") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("DETALHES DO RECEBIMENTO")
			&& memFile.getStringFieldRemoveEspCharsUpper(4).contains("VALOR ORIGINAL") && memFile.getStringFieldRemoveEspCharsUpper(5).contains("VALOR RECEBIDO")
			&& memFile.getStringFieldRemoveEspCharsUpper(6).contains("BANCO (PORTADOR)") && memFile.getStringFieldRemoveEspCharsUpper(7).contains("CATEGORIA (RECEITA)")){
			// logger.logInfo("TP UTIL -> IF PAG PLANILHA PADRAO ");
			return true;
		}
		if (tipoLancamento.contains("RECEBER")&& memFile.getStringFieldRemoveEspCharsUpper(0).contains("DATA PAGAMENTO") && memFile.getStringFieldRemoveEspCharsUpper(1).contains("DOCUMENTO")
			&& memFile.getStringFieldRemoveEspCharsUpper(2).contains("FORNECEDOR /  DESCRICAO PAGAMENTO") && memFile.getStringFieldRemoveEspCharsUpper(3).contains("DETALHES DO PAGAMENTO")
			&& memFile.getStringFieldRemoveEspCharsUpper(4).contains("VALOR ORIGINAL") && memFile.getStringFieldRemoveEspCharsUpper(5).contains("VALOR PAGO")
			&& memFile.getStringFieldRemoveEspCharsUpper(6).contains("BANCO (PORTADOR)") && memFile.getStringFieldRemoveEspCharsUpper(7).contains("CATEGORIA (DESPESA)")){
			// logger.logInfo("TP UTIL -> IF REC PLANILHA PADRAO ");
			return true;
		}
		return false;
	}
	
	public String validaComplementoVencimento(JSONObject roteiroCRM, JSONObject roteiroCRMPrincipal, String line, MemoryFile memFile, InoutLogger logger)throws Exception{
		int icomplemento01 = -1;
		int icomplemento02 = -1;
		int icomplemento03 = -1;
		int icomplemento04 = -1;
		int icomplemento05 = -1;
		int icomplemento06 = -1;
		
		String complemento01 = "";
		String complemento02 = "";
		String complemento03 = "";
		String complemento04 = "";
		String complemento05 = "";
		String complemento06 = "";
		
		icomplemento01  = getIndice("complemento01", icomplemento01, roteiroCRM);
		icomplemento02	= getIndice("complemento02", icomplemento02, roteiroCRM);
		icomplemento03  = getIndice("complemento03", icomplemento03, roteiroCRM);
		icomplemento04  = getIndice("complemento04", icomplemento04, roteiroCRM);
		icomplemento05  = getIndice("complemento05", icomplemento05, roteiroCRM);
		icomplemento06  = getIndice("complemento06", icomplemento06, roteiroCRM);
		
		// logger.logInfo("TPUTILS  getIndice ->  cpl03 -> " + icomplemento03 + " cpl04 -> " + icomplemento04);
		
		
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO01")) {
			try{complemento01     = getDate(complemento01, icomplemento01, line, false, roteiroCRM.optString("complemento01").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento01;
		}
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO02")) {
			try{complemento02     = getDate(complemento02, icomplemento02, line, false, roteiroCRM.optString("complemento02").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento02;
		}
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO03")) {
			try{complemento03     = getDate(complemento03, icomplemento03, line, false, roteiroCRM.optString("complemento03").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento03;
		}
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO04")) {
			try{complemento04     = getDate(complemento04, icomplemento04, line, false, roteiroCRM.optString("complemento04").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento04;
		}
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO05")) {
			try{complemento05     = getDate(complemento05, icomplemento05, line, false, roteiroCRM.optString("complemento05").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento05;
		} 
		if (roteiroCRMPrincipal.optString("usarComplementoVencimento").toUpperCase().contains("COMPLEMENTO06")) {
			try{complemento06     = getDate(complemento06, icomplemento06, line, false, roteiroCRM.optString("complemento06").toUpperCase(), memFile, logger);}
			catch(Exception e){}
			return complemento06;
		}
		return "";
	}
	
	public String getDataOttCartao(String dataPretendente, String tipoPlanilha, int idataMovimento, String line, String textoCRM, MemoryFile memFile, InoutLogger logger)throws Exception{
		String dataMovimento = "";
		logger.logInfo("ENTROU DT CART TP UTIL");
		try{
			
			String auxMes 	  = getMonth(cutString(dataPretendente, " ", " "));
			if(auxMes.length() == 2 && !auxMes.equals(cutString(dataPretendente, " ", " "))){
				dataMovimento = dataPretendente.replaceAll(cutString(dataPretendente, " ", " "), auxMes).replaceAll(" ", "/");
			}else if (dataPretendente.length() > 11 && dataPretendente.contains("/") && dataPretendente.contains(",") && dataPretendente.contains(":")){
				dataMovimento     = cutString(dataPretendente, 0, dataPretendente.lastIndexOf("/")+5);
			}else{
				dataMovimento     = getDate(dataMovimento, idataMovimento, line, false, textoCRM.toUpperCase(), memFile, logger);
			}
			if(tipoPlanilha.contains("CARTAO_ALELO2") || tipoPlanilha.contains("CARTAO_SICREDI7")){
				if(dataMovimento.equals("")){
					String dataAux = cutString(dataPretendente, 0, ".");
					Date dt = DateUtil.stringToDate("01/01/1900", "dd/MM/yyyy");
					int datanum = Integer.parseInt(dataAux);
					Calendar calSerial = Calendar.getInstance();
					calSerial.setTime(dt);
					calSerial.add(Calendar.DAY_OF_YEAR, datanum -2);
					dataMovimento = DateUtil.dateToString(calSerial.getTime(), "dd/MM/yyyy");
				}
			}
			logger.logInfo("TP UTIL -> dt " + dataMovimento);
		}catch(Exception e){
			dataMovimento   = "";
		}

		return dataMovimento;
	}
	
	public List<String> addBancoLidos (List<String> bancosLidos, String complemento08, String nomePortador){
		try {
			String banco = "";
			if (!complemento08.equals("")) {
				banco = "BANCO: "+complemento08+" ";
			}
			if (!nomePortador.equals("EM BRANCO")) {
				banco += nomePortador;
			}
			// logger.logInfo("Leu o banco " + banco);
			if (!bancosLidos.toString().contains(banco)) {
				bancosLidos.add(banco);
			}
		} catch (Exception e) {
			logger.logInfo("Bcc metodo " + e.getMessage());
		}
		return bancosLidos;
	}

	public List<String> addArquivosLidosLista (List<String> arquivosLidosLista, String nomeArquivo){
		try{
			if(!arquivosLidosLista.toString().contains(nomeArquivo)){
				arquivosLidosLista.add(nomeArquivo);
			}
		}catch(Exception Al){logger.logInfo("CATCH arquivosLidos metodo -> " + Al.getMessage());}
		
		return arquivosLidosLista;
	}
	
	public String buscaClassificacao (double valorDesconto, double valorJuros, double valorMulta, int contador, String erpContabilidade, String tipoLancamento){
		String classificacao = "";
		if(tipoLancamento.contains("PAGAR")){

			if (valorDesconto == 0 && valorJuros == 0) classificacao = "X";
			if (valorDesconto == 0 && valorJuros > 0)  classificacao = "C";
			if (valorDesconto >  0 && valorJuros == 0) classificacao = "D";
			if (valorDesconto >  0 && valorJuros > 0)  classificacao = "V";

			if ((contador > 1 || valorMulta > 0) && classificacao.equals("X")) classificacao = "C";
			if (contador > 1 && classificacao.equals("D")) classificacao = "V";
		}
		if(tipoLancamento.contains("RECEBER")){
			if (valorDesconto == 0 && valorJuros == 0) classificacao = "X";
			if (valorDesconto == 0 && valorJuros > 0)  classificacao = "D";
			if (valorDesconto >  0 && valorJuros == 0) classificacao = "C";
			if (valorDesconto >  0 && valorJuros > 0)  classificacao = "V";

			if ((contador > 1 || valorMulta > 0) && classificacao.equals("X")) classificacao = "D";
			if (contador > 1 && classificacao.equals("C")) classificacao = "V";
		}

		if (erpContabilidade.contains("DOMINIO")) {
			if(tipoLancamento.contains("PAGAR")){

				if (valorDesconto == 0 && (valorJuros + valorMulta) == 0) classificacao = "X";
				if (valorDesconto == 0 && (valorJuros + valorMulta) > 0)  classificacao = "V";
				if (valorDesconto >  0 && (valorJuros + valorMulta) == 0) classificacao = "V";
				if (valorDesconto >  0 && (valorJuros + valorMulta) > 0)  classificacao = "V";

				if ((contador > 1 || valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
				if (contador > 1 && classificacao.equals("D")) classificacao = "V";
			}
			if(tipoLancamento.contains("RECEBER")){
				if (valorDesconto == 0 && (valorJuros + valorMulta) == 0) classificacao = "X";
				if (valorDesconto == 0 && (valorJuros + valorMulta) > 0)  classificacao = "V";
				if (valorDesconto >  0 && (valorJuros + valorMulta) == 0) classificacao = "V";
				if (valorDesconto >  0 && (valorJuros + valorMulta) > 0)  classificacao = "V";

				if ((contador > 1 || valorMulta > 0) && classificacao.equals("X")) classificacao = "V";
				if (contador > 1 && classificacao.equals("C")) classificacao = "V";
			}
		}
		
		return classificacao;
	}
	
}
